// Code generated by go-bindata. DO NOT EDIT.
// sources:
// html-templates/layout.tpl (165B)
// html-templates/login.tpl (869B)
// html-templates/recover_end.tpl (744B)
// html-templates/recover_start.tpl (300B)
// html-templates/recovery2fa.tpl (551B)
// html-templates/register.tpl (971B)
// html-templates/sms2fa_validate.tpl (1.489kB)
// html-templates/sms2fa_validate_success.tpl (468B)
// html-templates/totp2fa_validate.tpl (1.447kB)
// html-templates/totp2fa_validate_success.tpl (458B)
// email-templates/confirm_html.tpl (111B)
// email-templates/confirm_txt.tpl (95B)
// email-templates/recover_html.tpl (119B)
// email-templates/recover_txt.tpl (103B)

package abrenderer

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _htmlTemplatesLayoutTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x81\x50\x0a\x0a\x0a\x0a\x36\x19\xa9\x89\x29\x10\x26\x98\x5b\x92\x59\x92\x93\x6a\x57\x5d\x9d\x94\x93\x9f\x9c\xad\xa0\x04\xe6\x2a\x29\xe8\xd5\xd6\x56\x57\xa7\xe6\xa5\xd4\xd6\xda\xe8\x43\x54\x40\x34\xeb\x23\x74\xdb\x24\xe5\xa7\x54\x22\x0c\x82\x9b\x90\x58\x5a\x92\x91\x94\x5f\x5c\x8c\x6c\x08\x54\x33\x44\x87\x8d\x3e\xc4\x35\x80\x00\x00\x00\xff\xff\x8e\x27\x12\xb2\xa5\x00\x00\x00")

func htmlTemplatesLayoutTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesLayoutTpl,
		"html-templates/layout.tpl",
	)
}

func htmlTemplatesLayoutTpl() (*asset, error) {
	bytes, err := htmlTemplatesLayoutTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/layout.tpl", size: 165, mode: os.FileMode(436), modTime: time.Unix(1521648822, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0x36, 0x4a, 0x13, 0x31, 0xda, 0x80, 0xcf, 0x4d, 0xc, 0xd4, 0x84, 0xed, 0x37, 0xc5, 0xb, 0xf, 0x7c, 0x88, 0xe2, 0xca, 0xca, 0x85, 0x18, 0x29, 0x8e, 0x78, 0x1f, 0x6c, 0x5b, 0x7, 0xc8}}
	return a, nil
}

var _htmlTemplatesLoginTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x8a\xdc\x30\x0c\xc7\xcf\xdd\xa7\x10\xba\xcf\xe4\x05\x1c\x43\xa1\x3d\x14\x5a\xba\x6c\x4b\xaf\xc5\xb1\x35\x1b\xb3\xb1\x1d\x14\x65\x3f\x08\x7e\xf7\xe2\x7c\x74\x9a\x1d\x98\xe9\x29\xb1\xfc\x97\x7e\xfa\xcb\x52\xa7\xc4\x01\x8c\x15\x9f\x62\x8d\xd3\x14\xd2\x18\xa5\x37\xd2\x92\x03\xec\xd2\xa3\x8f\x98\x33\x42\x20\x69\x93\xab\xf1\xfe\xfb\x8f\x9f\xa8\xef\x00\x00\xa6\xe9\xc5\x4b\x0b\x47\x62\x4e\x9c\xf3\x34\x1d\x73\x56\x0d\x43\xa5\xa7\x89\xa2\xcb\x79\x56\x29\x1f\xfb\x51\x40\xde\x7a\xaa\x51\xe8\x55\x10\x6c\x67\x86\xa1\xc6\x02\x3e\xd8\x14\x85\x53\x87\x10\x4d\xa0\x1a\x29\x18\xdf\x21\xf4\x9d\xb1\xd4\xa6\xce\x11\xd7\xf8\xf9\xb0\x04\x9f\x4d\x37\x52\x69\xf1\xd8\xb3\x0f\x86\xdf\xbe\x7c\xfa\x55\x42\x39\xa3\x5e\xb8\x97\xc0\xde\x0c\xc3\x4b\x62\x77\x15\x7a\x16\xed\xb8\xf7\x5b\x78\xab\xfe\x61\x73\x6c\x07\x3e\xfd\x96\xf4\x44\x31\xe7\x1d\xae\xf5\xce\x51\xdc\xea\x9e\x65\xff\x36\x5f\xa6\xb9\x1f\xd1\x56\x36\x24\x37\x76\x34\x94\x51\x2e\x01\xa6\x40\xa1\x21\x7e\x47\xb1\x2d\xd9\xa7\x26\xbd\x6e\x1c\x0e\x7f\xeb\x0b\x8f\x84\x1a\x1e\xd6\x44\xf8\x46\xaa\x9a\x53\xf5\xee\x65\xe6\x0f\x1c\x72\x3e\x7b\x62\x72\xfe\x3d\x68\x6f\x67\x56\x5c\x77\xa2\x9a\x51\x24\xc5\x35\x7d\x18\x9b\xe0\x05\xf5\xd7\xb2\x45\xaa\x5a\xee\xf4\x2d\xcb\x36\x3d\xcf\x8e\xe7\x7e\x95\x81\x96\xe9\x74\xb1\x98\xab\xac\xac\xa6\x7e\x58\xfe\xe1\xa3\xb5\x45\xa2\x2a\x73\x69\xf3\x06\xf3\xd1\x0f\xf2\x3f\xd0\x45\xb7\x52\x97\xc3\x55\xac\xaa\xca\xbe\xe9\xbb\x3f\x01\x00\x00\xff\xff\x52\x73\xd5\x4b\x65\x03\x00\x00")

func htmlTemplatesLoginTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesLoginTpl,
		"html-templates/login.tpl",
	)
}

func htmlTemplatesLoginTpl() (*asset, error) {
	bytes, err := htmlTemplatesLoginTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/login.tpl", size: 869, mode: os.FileMode(436), modTime: time.Unix(1535743555, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0x27, 0xa9, 0x54, 0x2, 0xc7, 0xdc, 0x6d, 0xcb, 0x54, 0xd8, 0xa3, 0x6d, 0x72, 0x7, 0xcf, 0x73, 0x21, 0x42, 0x3a, 0xd5, 0x19, 0x4f, 0xca, 0x42, 0xfb, 0x18, 0x1a, 0x41, 0x4a, 0x90, 0xa0}}
	return a, nil
}

var _htmlTemplatesRecover_endTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x72\xab\x30\x0c\xc6\xd7\x2f\xa7\xd0\x68\xf5\xba\x28\xbe\x80\xf1\x26\x07\x68\xa6\xed\x3e\xe3\x60\x51\x3c\x05\x9b\x11\x26\x69\xc7\xe3\xbb\x77\x08\xa6\xf4\xff\xa4\x5d\x21\xe9\x13\x1f\x3f\x09\xc9\xda\x73\x07\xba\x0a\xd6\xbb\x12\x63\xec\xfc\xe8\x42\xaf\x43\x43\x06\x90\xa9\xf2\x47\x62\x41\xce\x60\x4a\x08\x1d\x85\xc6\x9b\x12\x77\x37\x77\xf7\xa8\x36\xff\x62\x3c\xd9\xd0\x40\x41\xcc\x9e\x87\x94\x72\xfe\xdf\x3a\x43\x4f\x50\x00\xe2\xd5\x54\x64\xed\x1e\x08\x8a\x94\xe4\xd0\x6b\xa7\x62\x9c\x42\x71\x8e\xe5\x81\x41\xa8\x18\xc9\x99\xa9\x73\x7d\xc0\x75\x4a\x1b\x00\x00\x69\x5d\x3f\x06\x08\xcf\x3d\x95\xd8\xeb\x61\x38\x79\x36\x08\x4e\x77\xef\xf2\xbe\xd5\x15\x35\xbe\x35\xc4\x25\xee\x5e\xcb\x47\xdd\x8e\x54\x22\x82\xc8\x9f\xfa\x0a\x3a\xf3\x2d\x66\x97\x71\x5e\x06\x58\x79\x57\x5b\xee\xf6\xdf\x80\x6e\x67\x19\xfe\x06\xfc\xd1\xfc\xb7\xe0\x87\x31\x04\xef\x32\xf9\x30\x1e\x3a\x1b\x50\xdd\xce\xff\x5c\x8a\x59\x5d\x28\xce\x2f\x68\x68\x98\xea\x12\x05\xaa\xad\x76\x15\xb5\x52\x68\xf5\x79\x09\x8d\x35\x86\xdc\xb2\x82\xe0\x1f\xa7\x24\x0f\x16\x63\x91\xaf\x6a\x7f\x16\xa6\xb3\xca\xf6\xcb\x9c\xd5\xc0\xf5\x22\xfe\xe0\xbb\xb6\xbd\x35\x9f\xfd\xd6\x41\xa5\x98\x0e\x5c\x6d\x5e\x02\x00\x00\xff\xff\xa6\x15\x7c\x36\xe8\x02\x00\x00")

func htmlTemplatesRecover_endTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesRecover_endTpl,
		"html-templates/recover_end.tpl",
	)
}

func htmlTemplatesRecover_endTpl() (*asset, error) {
	bytes, err := htmlTemplatesRecover_endTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/recover_end.tpl", size: 744, mode: os.FileMode(436), modTime: time.Unix(1525720604, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7c, 0x96, 0x34, 0x5f, 0x16, 0xcc, 0xef, 0x65, 0xf1, 0xd9, 0xc9, 0xc1, 0x43, 0x55, 0xa9, 0x38, 0x77, 0x68, 0xe7, 0x86, 0x1, 0x2e, 0xa4, 0x22, 0x78, 0x78, 0x78, 0xba, 0xd6, 0x1f, 0x46, 0x7c}}
	return a, nil
}

var _htmlTemplatesRecover_startTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x41\x4e\x04\x21\x10\x45\xf7\x7d\x8a\x4a\xed\x67\xb8\x00\xb0\x31\xae\x35\xea\xde\xd0\x4d\xb5\x10\xa1\xe8\x30\xd5\xa3\x86\x70\x77\xd3\x41\xa3\xb3\xad\xfa\x79\x79\xff\xeb\xb5\xd4\x0c\x6e\x91\x58\xd8\x60\x6b\xb9\xec\x2c\x9b\x93\x40\x1e\xb0\xd2\x52\xae\x54\xb1\x77\x84\x4c\x12\x8a\x37\xf8\xf8\xf0\xfc\x82\x76\x02\x00\xd0\x91\xb7\x5d\x40\xbe\x36\x32\x28\xf4\x29\x08\xec\x32\x19\xa4\xec\x62\x42\xd8\x92\x5b\x28\x94\xe4\xa9\x1a\xbc\x3f\x8d\xa3\xb2\x7a\xae\xa0\x06\xa1\xb5\x8f\x28\x01\xce\xcb\xa5\xae\xaf\x52\xde\x89\x7b\xbf\xa1\x86\xe8\x3d\xf1\x2f\xf7\x2f\x86\x70\x75\x69\xa7\xc3\xf8\x7c\xd8\x29\xdb\x1a\xb1\x87\x53\xef\x43\x6d\xde\x45\x0a\xff\x50\x2e\xfb\x9c\xa3\xa0\x7d\x1a\x7d\xb4\x1a\xdf\xff\x26\xda\x41\xa8\xb4\x1a\x54\xa9\xbc\x45\x46\x7b\xe7\x78\xa1\xa4\x95\xb3\x93\x56\xc7\x48\x76\xfa\x0e\x00\x00\xff\xff\x06\x4c\x29\x0e\x2c\x01\x00\x00")

func htmlTemplatesRecover_startTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesRecover_startTpl,
		"html-templates/recover_start.tpl",
	)
}

func htmlTemplatesRecover_startTpl() (*asset, error) {
	bytes, err := htmlTemplatesRecover_startTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/recover_start.tpl", size: 300, mode: os.FileMode(436), modTime: time.Unix(1525138168, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4c, 0xf4, 0x67, 0xdf, 0x39, 0x26, 0xb, 0x51, 0xb3, 0x7f, 0x4f, 0xdf, 0x19, 0x19, 0x43, 0x7f, 0x6, 0xf8, 0xce, 0x3, 0xf2, 0xfe, 0xbe, 0x94, 0x7f, 0x53, 0x84, 0x7a, 0x93, 0x9a, 0xa8, 0x4c}}
	return a, nil
}

var _htmlTemplatesRecovery2faTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x6e\x83\x30\x10\x44\xef\xf9\x8a\x95\xef\xc5\x4a\x8f\x95\xe1\xd2\x0f\x68\x95\xf6\x1e\x19\xbc\x09\x56\xc3\x1a\x2d\x26\x55\x64\xed\xbf\x57\x60\x08\x69\x7b\x02\xd9\x33\xb3\xfb\xc6\x29\x7d\xfb\xd8\x42\xc1\xd8\x84\x2b\xf2\xed\xd8\x04\x87\x03\x3c\x89\xec\x00\x00\x4c\xbb\xaf\x0e\xcb\x15\xe4\x2b\xc6\x33\x12\xb2\x8d\xe8\x8c\x6e\xf7\x55\xd6\xf5\xf9\x3b\xff\x0f\xbd\xa5\xcd\xf5\x3a\xb9\x5e\x8c\x9e\x4f\x8d\xae\x79\x53\xa6\xc4\x96\xce\x08\xc5\x7d\xde\xe6\x4f\xa9\x10\x59\x5d\x35\x83\x7e\xb4\x21\xb9\x6d\x45\xdd\x57\xbb\x94\xf0\x32\xe0\x76\xb6\x46\xd0\xf1\x37\x98\x08\xf0\x5f\x9c\xce\x7a\xf2\x74\x2e\x96\x61\x39\xe0\x14\xb8\x03\xdb\x44\x1f\xa8\x54\x29\x75\x61\xa4\xd8\xdb\xd8\xa2\x03\xf5\x7c\xb2\x7a\x4d\xd1\x73\x1d\x4a\x44\x41\x87\xb1\x0d\xae\x54\xef\x6f\x1f\x9f\xea\x71\xdb\xdc\x30\x32\x07\x16\xc9\x5c\x33\xd0\xcc\xf1\x00\xbe\x2a\x9b\x81\x4f\xc7\x18\xbe\x90\x44\x8c\xa7\x7e\x8c\x10\x6f\x3d\x96\xaa\xf5\xce\x21\x29\x20\xdb\x61\xa9\x36\x99\x82\xab\xbd\x8c\x38\x2d\x5a\x4c\x9b\xfc\x8f\x36\xf5\x18\x63\xa0\x25\x67\x18\xeb\xce\x47\x55\x1d\xee\x4f\x69\x74\x16\x2c\xf4\x7a\xc2\x9f\x5b\x5d\x8a\xfe\x09\x00\x00\xff\xff\x33\x74\x67\x3b\x27\x02\x00\x00")

func htmlTemplatesRecovery2faTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesRecovery2faTpl,
		"html-templates/recovery2fa.tpl",
	)
}

func htmlTemplatesRecovery2faTpl() (*asset, error) {
	bytes, err := htmlTemplatesRecovery2faTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/recovery2fa.tpl", size: 551, mode: os.FileMode(420), modTime: time.Unix(1535319925, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd3, 0xa5, 0xf7, 0xe0, 0xde, 0xc4, 0xdc, 0x33, 0x66, 0x5e, 0x6c, 0xd4, 0x2a, 0x76, 0x3e, 0xa5, 0xd, 0x47, 0xa3, 0x40, 0x54, 0x8b, 0x46, 0xd2, 0xb, 0x5, 0xc6, 0x43, 0xa, 0x18, 0xe0, 0x3e}}
	return a, nil
}

var _htmlTemplatesRegisterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xcd\x6e\xdc\x20\x10\x80\xcf\xeb\xa7\x18\xcd\xa9\x3d\xc4\xbe\x57\x98\x4b\xd4\x7b\xd4\x17\x88\x58\x33\x8e\x51\x6d\x40\x03\x4e\x52\x21\xde\xbd\x62\xfd\xd7\x4d\xfa\xb3\xcd\xc9\xcc\x78\x18\xbe\x0f\x0d\xa2\x77\x3c\x81\xea\xa2\x71\xb6\xc5\x94\x26\x37\xdb\xe8\x55\x1c\x48\x03\x32\x3d\x99\x10\x89\x31\x67\x84\x89\xe2\xe0\x74\x8b\xde\x85\x88\xb2\x3a\xa5\xf4\x62\xe2\x00\x35\x31\x3b\x0e\x39\xaf\xf1\x27\x63\x35\xbd\x42\x0d\x88\x9f\x4b\x92\x95\x7d\x22\xa8\x73\x16\xc1\x2b\x2b\x53\x2a\xcb\xe6\xb2\x16\x67\x86\x46\xa6\x44\x56\x97\xca\xe3\x03\x77\x39\x57\x27\x31\xaa\x33\x8d\xd0\x3b\x6e\x91\x26\x65\x46\x94\x5f\xef\xca\xf7\x8b\x68\x2e\xbf\x64\x75\x12\xc6\xfa\x39\x82\x55\x13\x6d\x45\x10\x7f\x78\x6a\x31\xd2\x6b\x44\x78\x56\xe3\x4c\xc5\x6b\x61\xf5\x4c\x81\xf8\x99\x76\xda\xfa\xb2\xa7\x84\xf5\x35\x42\x31\xf6\xa3\xea\x68\x70\xa3\x26\x6e\x71\x39\x1a\xa1\x59\xb1\x7f\x77\x01\xab\xeb\xda\xf3\x16\xe1\xf7\xa6\x5e\x85\xf0\xe2\x58\xa3\x7c\x58\x57\x7f\xd2\xdd\x2b\x57\xe3\x23\xbe\x02\x7f\xd8\xd3\x37\xa0\x6f\x3d\x3e\x4a\xdf\x39\xdb\x1b\x9e\x1e\x0f\x8b\xfb\x25\x03\xff\xb2\x79\xb7\xf3\xef\x56\x6f\xdb\xde\x64\xf7\xf6\x8c\xff\xb2\x5c\x60\x17\xa8\x30\x9f\x27\x73\x8c\xd7\xb7\xed\x9d\xec\x08\x42\xc1\xc0\xd4\xb7\xd8\xa0\xbc\x57\xb6\xa3\x51\x34\x4a\x56\x07\x5b\x17\xb8\x7f\x8c\xee\x3b\xd9\x9c\xaf\x5a\x0f\x46\x6b\xb2\xb8\xdd\xca\x5e\xf6\xcb\x2c\xd7\x65\x38\x77\xc6\x4a\x34\xe5\x0d\xcb\xea\x67\x00\x00\x00\xff\xff\xf4\x17\x43\xcb\xcb\x03\x00\x00")

func htmlTemplatesRegisterTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesRegisterTpl,
		"html-templates/register.tpl",
	)
}

func htmlTemplatesRegisterTpl() (*asset, error) {
	bytes, err := htmlTemplatesRegisterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/register.tpl", size: 971, mode: os.FileMode(436), modTime: time.Unix(1525368703, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0xe3, 0x22, 0x0, 0x8b, 0x63, 0xbe, 0xca, 0xb6, 0x96, 0xaa, 0x3e, 0x9e, 0xe3, 0xef, 0x80, 0xa, 0x9f, 0x73, 0x25, 0x9e, 0xc8, 0x43, 0x91, 0xca, 0xae, 0x22, 0x99, 0x21, 0xd1, 0xe6, 0x77}}
	return a, nil
}

var _htmlTemplatesSms2fa_validateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xc1\x6e\xdb\x3a\x10\xbc\xe7\x2b\x16\x04\x1e\x10\x1f\x6c\x21\x39\x5b\x3a\xbc\xa0\xd7\x26\x48\x7a\x37\x68\x6a\x19\x11\x11\xb9\x2a\xb9\x72\x6a\x08\xfc\xf7\x82\x92\x1c\x4b\x8e\x63\xb8\x28\x7a\xb2\x45\x0e\x67\x66\x77\x96\xec\x3a\xa3\x01\x7f\xc2\x6a\x27\x6b\x53\x4a\xc6\x8d\xa5\x12\x41\x04\xe4\xb6\x11\xb0\x8c\xf1\x06\x00\x60\x5d\xdd\x15\x2f\x69\x09\xf8\x9d\x96\x5a\x2a\x26\x0f\xb2\xe5\x0a\x1d\x1b\x25\xd9\x90\x5b\x67\xd5\x5d\x31\x80\x35\x79\x0b\x52\xa5\xd5\x5c\x74\x9d\xa5\xd6\x71\x23\xb9\xc2\x12\xc4\xbd\x96\x59\xb0\x21\x1b\x04\x62\x14\x60\x91\x2b\x2a\x73\xf1\xf4\xf8\xf2\x43\x0c\x0c\x3d\x8b\x71\x4d\xcb\xc0\xfb\x06\x73\xc1\xf8\x8b\x05\xa8\x5a\x86\x90\x8b\x44\xbf\x54\xe4\xd8\x53\x2d\xc0\x49\x8b\xb9\x68\x2a\x72\xb8\x71\xad\xdd\xa2\x17\xd0\xd4\x52\x61\x45\x75\x89\x3e\x17\x4f\x69\x0b\xbe\x8f\x5b\x5d\xf7\x6e\xb8\x82\x55\xb0\x61\x33\x3d\x14\xe3\x4e\xd6\x2d\x26\xbf\xab\x18\x45\xd7\xa1\x2b\x63\xcc\x26\x7e\xb6\x2d\x33\xb9\xd1\x50\x68\xb7\xd6\xb0\x28\xfe\xc7\x57\xe3\xa0\x6f\xcd\x3a\x1b\x10\xc7\x23\x07\x2d\x15\xbc\xde\x30\xbd\xa1\x8b\x71\x56\x56\x65\xca\x12\xdd\xa1\x86\x23\x4c\xc0\xcc\x0c\x64\xc5\xe8\x67\xe8\x6f\x96\x3a\x50\xdc\x74\x1d\xd6\x01\x3f\x32\xfa\x2a\xca\xc3\xe7\x3c\xcd\x6f\x8e\xd1\xc3\x9e\x5a\x0f\xc1\x06\x50\x54\xe2\x31\xc1\x91\xf9\x3c\x9f\x22\xa7\x8d\xb7\x73\xba\x87\x61\x71\x4e\x08\x4c\xa0\xc8\x36\x35\x32\x42\x18\x7a\x74\x95\x84\x47\x4b\x3b\xbc\x52\x61\x00\xc3\xbd\x96\xa0\x3d\x8d\x00\xa9\x54\x9a\xba\xa9\xde\x12\x26\x2d\xbc\x30\xa2\xb7\x8d\x37\x8e\xf5\x71\x54\xff\x0b\xe2\xc4\xe1\xe2\xc2\xdc\x1e\x42\x47\xef\xc9\xc7\xd8\x27\xb8\xde\xfa\x93\x0c\x3f\x21\x43\x82\x7a\xe9\x5e\x11\x56\xa9\xb2\x18\xd7\xa1\x91\xae\x18\xce\x67\xfd\xff\x19\x4d\xff\xf3\xd1\xa1\x3f\xbf\x31\x49\xe4\xe4\xa6\x3c\xf4\x4b\xb2\x65\x3a\xa4\x96\x0b\xd2\x5a\x8c\xc2\x13\xe3\x46\x03\x79\xb8\xbd\x34\x6d\x8b\xb3\xdb\x63\xb2\x8b\xbf\x30\xee\x51\xd1\x0e\xfd\x7e\x73\xa6\x82\xe7\x71\x0f\xae\x2f\xe5\xb4\x8b\xff\xe8\xd2\x7e\xfd\x84\x3c\x63\x40\x57\x7e\x7e\x3d\xce\xa3\x1f\xdf\xe6\xc8\xc9\x63\xd0\x6b\xfd\x0e\x00\x00\xff\xff\x65\x86\xc5\x01\xd1\x05\x00\x00")

func htmlTemplatesSms2fa_validateTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesSms2fa_validateTpl,
		"html-templates/sms2fa_validate.tpl",
	)
}

func htmlTemplatesSms2fa_validateTpl() (*asset, error) {
	bytes, err := htmlTemplatesSms2fa_validateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/sms2fa_validate.tpl", size: 1489, mode: os.FileMode(420), modTime: time.Unix(1535322363, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0xff, 0xa7, 0xde, 0x24, 0x3d, 0x11, 0xab, 0x9, 0x36, 0x29, 0x1d, 0x89, 0xb3, 0xb0, 0x95, 0x9f, 0x97, 0x8f, 0xe7, 0xeb, 0xc9, 0x55, 0x48, 0xa3, 0x52, 0xd2, 0xdb, 0x68, 0xa2, 0x8c, 0xdc}}
	return a, nil
}

var _htmlTemplatesSms2fa_validate_successTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbd\x6a\xec\x30\x10\x85\x7b\x3f\xc5\xb0\xbd\x6d\xb6\xbd\x08\x37\xb7\x4e\x93\x85\xb4\x8b\x3c\x3a\x8e\x0d\xb2\xc6\x91\x64\x87\x45\xe8\xdd\xc3\xae\x62\x9c\x22\x90\x2d\x67\x38\xdf\x37\x3f\x29\x4d\x03\xe1\x83\x9a\x4d\xdb\xc9\xe8\x88\xeb\x2c\x06\x74\xda\xcb\x13\xd5\x39\x57\x6a\x3c\x77\x6f\xa5\x33\x89\xa3\xb0\x32\x23\x84\x61\xb5\xaa\x1d\xcf\x5d\x95\x12\x6c\x00\xfd\x6e\x0a\x88\xeb\x72\x68\x2e\xf7\x92\x58\xe6\xc5\x22\xe2\x09\x9e\xc5\x0d\x93\x9f\x7f\x18\x5e\x2e\x14\x3f\xa5\x1e\x34\x47\xf1\xa4\xd7\x38\xc2\xc5\x89\xcb\x6e\x70\xba\xb7\x30\x45\xac\x96\xae\x22\x22\x52\x61\xd1\xae\x7b\x05\xcb\x06\x7f\xa3\xff\x62\x10\xfe\xa9\xf6\xd1\x55\x6d\xef\x4b\x2a\x25\xaf\xdd\x3b\xa8\xf1\xdf\xc1\x2b\xdf\x83\x8f\xc1\x87\x25\xa5\x26\xe7\x9d\xed\x3d\xb5\x3b\x0c\x67\xca\x8e\xed\xf2\xc7\x49\x1e\xb3\x6c\x78\xf6\xa2\xe3\xdb\xf6\x46\x05\x35\x34\x78\x99\x49\x33\xcb\xea\xe2\xfe\xc4\x9a\xe0\x4c\xce\xd5\x57\x00\x00\x00\xff\xff\x9a\x33\x2b\xdb\xd4\x01\x00\x00")

func htmlTemplatesSms2fa_validate_successTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesSms2fa_validate_successTpl,
		"html-templates/sms2fa_validate_success.tpl",
	)
}

func htmlTemplatesSms2fa_validate_successTpl() (*asset, error) {
	bytes, err := htmlTemplatesSms2fa_validate_successTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/sms2fa_validate_success.tpl", size: 468, mode: os.FileMode(420), modTime: time.Unix(1535304229, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x40, 0x6a, 0x8b, 0x66, 0x49, 0x80, 0xef, 0x75, 0x30, 0xa2, 0xee, 0x7e, 0x3b, 0xfa, 0x68, 0xf9, 0xd2, 0xac, 0x3d, 0x9f, 0xe3, 0x42, 0xc1, 0xfc, 0x3d, 0x4f, 0x47, 0x4f, 0x3e, 0xba, 0xa1}}
	return a, nil
}

var _htmlTemplatesTotp2fa_validateTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xbd\x6e\xdb\x30\x10\xde\xf3\x14\x07\x02\x05\xe2\xc1\x16\xd2\xb1\x90\x34\x34\xe8\xd4\x21\x45\xd3\xdd\xa0\xa9\x93\x45\x44\xe2\xc9\xe4\xc9\xa9\x41\xf0\xdd\x0b\x8a\xfe\x91\x53\xdb\x6d\x51\x64\x32\x7c\xbc\xfb\x74\xdf\x0f\xe9\xbd\xae\x01\x37\xb0\xd8\xca\x56\x57\x92\x71\xd9\x51\x85\x20\x1c\xf2\xd0\x0b\x98\x87\x70\x07\x00\x90\x37\x0f\xe5\x73\x2c\x01\xbf\xd2\xbc\x96\x8a\xc9\x82\x1c\xb8\x41\xc3\x5a\x49\xd6\x64\xf2\xac\x79\x28\x53\x73\x4d\xb6\x03\xa9\x62\xb5\x10\xde\x77\x34\x18\xee\x25\x37\x58\x81\xf8\x58\xcb\x8c\x89\xfb\x2c\x7d\x21\x04\x01\x1d\x72\x43\x55\x21\xbe\x3d\x3d\xff\x10\x09\x62\x84\x59\x0d\xcc\x64\x80\x77\x3d\x16\xc2\x0d\xab\x4e\xb3\x28\x3f\xe3\x5a\x1b\x18\x77\xc9\xb3\xd4\x71\x1a\xf1\xfe\x55\x73\x03\x0b\xe5\x6c\xbd\x64\x7a\x41\x13\x42\xae\x4d\x3f\xf0\x1e\xa5\xd1\x55\x85\x46\x80\x91\x1d\x16\xe2\xd4\x26\x60\x2b\xdb\x01\xe3\xb6\x8b\xb8\x52\x56\x7a\x8f\xa6\x3a\xb0\xcf\x22\xa3\xf2\xce\x7b\x6c\x1d\x1e\x45\xb9\xa6\xdd\xe1\xef\xb9\x7c\x5f\x0c\xa3\x85\x1d\x0d\x67\xc2\x91\x05\x45\x15\x9e\xc4\xdb\x7f\xe3\x32\xb2\x22\x53\x6b\xdb\x9d\x03\x3f\xa6\xe2\x35\x68\x60\x02\x45\x5d\xdf\x22\x23\xb8\xa4\xdb\xd1\x29\xdd\xad\xc1\x59\x75\xdd\xa5\x8d\x1d\x2d\x92\x2d\x17\xb1\x98\x00\x60\x93\xa0\xa3\x4e\xf9\xca\x42\xb6\x47\x73\xbd\x34\xe5\x57\xdc\x7d\x02\xef\x17\x71\xdc\xa1\xb2\xc8\x21\xe4\xd9\x78\xf4\x67\x82\x16\x3b\xda\xe2\x3f\xf3\x4b\x63\x10\x17\xac\x2d\x1d\x5a\x95\x8a\x94\xa6\xd2\xce\x61\x62\xea\x8d\x94\xde\xf7\x56\x1b\xae\x27\x3a\x7c\x70\xe2\xcd\xb2\xb3\x1b\xd1\x3d\xe4\x10\xad\x25\x1b\xc2\x18\xaa\x24\xd4\x34\x56\xbf\x75\xba\xd8\x6a\xa5\x59\x23\x2c\x22\xb5\x10\x92\xa4\x69\x3e\x69\x78\x06\x33\xfe\x1c\xc5\x4a\x8e\x4e\xd2\xce\xf8\x93\x05\xa8\x56\x3a\x57\x88\x48\x77\xae\xc8\xb0\xa5\xf6\x78\x01\x46\x13\xfb\x56\x2a\x6c\xa8\xad\xd0\x16\xe2\x71\x2c\xc9\x81\xe9\x10\x9a\x42\x50\x5d\x8b\xa9\xd1\xc7\xf0\x93\x85\xfb\x5b\x17\x60\x76\xf1\x78\x6f\xf2\xec\x3f\x16\xb7\xa8\x68\x8b\x76\xb7\xbc\xc0\xe0\xfb\xfe\x0c\xfe\x9e\xca\x5b\x15\xdf\xe9\x1d\xb9\xfe\xaa\x3d\xbd\x9c\x3f\x66\x93\x17\x67\x9c\xfe\x15\x00\x00\xff\xff\x2e\x89\x6c\x6b\xa7\x05\x00\x00")

func htmlTemplatesTotp2fa_validateTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesTotp2fa_validateTpl,
		"html-templates/totp2fa_validate.tpl",
	)
}

func htmlTemplatesTotp2fa_validateTpl() (*asset, error) {
	bytes, err := htmlTemplatesTotp2fa_validateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/totp2fa_validate.tpl", size: 1447, mode: os.FileMode(420), modTime: time.Unix(1535322333, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xc1, 0xbc, 0xe4, 0x1d, 0xc7, 0xd6, 0x28, 0xfc, 0xf5, 0x4f, 0x65, 0x8, 0x15, 0x86, 0xc5, 0xae, 0x2d, 0xb4, 0x19, 0x4, 0x2a, 0x2c, 0x28, 0x2c, 0xe8, 0x1b, 0xcb, 0x7e, 0xf8, 0x7, 0x81}}
	return a, nil
}

var _htmlTemplatesTotp2fa_validate_successTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\xec\x30\x0c\x45\xf7\xf9\x0a\x31\xfb\x24\xcc\xf6\x61\x02\x8f\xfe\x41\x0b\xdd\x0e\x8e\x7c\xd3\x04\x1c\x2b\xb5\x9d\x94\xc1\xf8\xdf\x4b\xc6\x0d\xd9\x14\x3a\x3b\x4b\xdc\x73\x2c\x29\xa5\x69\x20\x7c\x52\xb3\x69\x3b\x19\x1d\x71\x9b\xc5\x80\x2e\x47\x79\xa1\x3a\xe7\x4a\x8d\xd7\xee\xbd\x74\x26\x71\x14\x56\x66\x84\x30\xac\x56\xb5\xe3\xb5\xab\x52\x82\x0d\xa0\xdf\x4d\x01\x71\x5d\x4e\xcd\xdb\x5e\x12\xcb\xbc\x58\x44\x3c\xc1\xb3\xb8\x61\xf2\xf3\x69\xf8\xbf\xc6\x11\x2e\x4e\xac\xa3\x78\x8a\x5f\x52\x0f\x9a\xf7\x27\x9c\xee\x2d\x4c\x71\xaa\xa5\xab\x88\x88\x54\x58\xb4\xeb\x5e\xc1\xb2\xc1\xdf\xe9\x45\x0c\xc2\x3f\xd5\x3e\xba\xaa\xed\x7d\x49\xa5\xe4\xb5\xfb\x00\x35\xfe\x27\x78\xe3\x3d\xf8\xf8\xf3\xb4\xa4\xd4\xe4\x7c\xb0\xbd\xa7\xf6\x80\xe1\x4c\x19\xaf\x5d\xfe\xd8\xc6\x63\x96\x0d\x4f\x2c\x73\xde\xd8\xde\xa9\x50\x86\x06\x2f\x33\x69\x66\x59\x5d\x3c\x4e\x57\x13\x9c\xc9\xb9\xfa\x0e\x00\x00\xff\xff\xc0\x79\xe8\x77\xca\x01\x00\x00")

func htmlTemplatesTotp2fa_validate_successTplBytes() ([]byte, error) {
	return bindataRead(
		_htmlTemplatesTotp2fa_validate_successTpl,
		"html-templates/totp2fa_validate_success.tpl",
	)
}

func htmlTemplatesTotp2fa_validate_successTpl() (*asset, error) {
	bytes, err := htmlTemplatesTotp2fa_validate_successTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "html-templates/totp2fa_validate_success.tpl", size: 458, mode: os.FileMode(420), modTime: time.Unix(1535304232, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x4d, 0xbc, 0xb4, 0xa, 0x10, 0x45, 0x1f, 0x9c, 0xbc, 0xe7, 0x47, 0x96, 0xb8, 0xec, 0x3c, 0x1a, 0x64, 0x58, 0x58, 0xde, 0xa9, 0x52, 0x28, 0x5c, 0xeb, 0x87, 0xf, 0xcd, 0x13, 0xe6, 0x77}}
	return a, nil
}

var _emailTemplatesConfirm_htmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xc1\x0d\xc2\x30\x0c\x05\xd0\x7b\xa6\xf8\xea\x00\x44\xbd\x1b\x5f\x58\x80\x15\x8c\xe5\xca\x15\xa1\xae\x4c\x73\x40\x55\x76\x67\x81\x2e\xf0\xc8\x67\x7e\xc4\xb6\xac\xf9\xc1\x2f\x7a\x42\x54\xa3\x6f\x07\x55\x9f\xb9\xd0\x2b\x51\xb9\xd0\xce\xcf\x66\xf2\x35\x68\x5b\xf5\x0d\x12\x78\xda\x72\x9f\xce\xf3\xd6\xb3\x8d\x31\xa1\xb2\x5b\x1a\x55\x61\x1c\x01\xbd\x14\x77\x2e\xff\x00\x00\x00\xff\xff\xdc\x7c\x99\x43\x6f\x00\x00\x00")

func emailTemplatesConfirm_htmlTplBytes() ([]byte, error) {
	return bindataRead(
		_emailTemplatesConfirm_htmlTpl,
		"email-templates/confirm_html.tpl",
	)
}

func emailTemplatesConfirm_htmlTpl() (*asset, error) {
	bytes, err := emailTemplatesConfirm_htmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "email-templates/confirm_html.tpl", size: 111, mode: os.FileMode(436), modTime: time.Unix(1525368498, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc4, 0xb3, 0x4d, 0x8d, 0x81, 0xfb, 0x99, 0x57, 0x75, 0x7, 0xee, 0xa5, 0x25, 0xc2, 0x67, 0x98, 0x50, 0x46, 0x6e, 0xa7, 0xb8, 0x29, 0xb5, 0xa0, 0xe5, 0xa0, 0xa1, 0x93, 0x40, 0x9e, 0xaa, 0x5a}}
	return a, nil
}

var _emailTemplatesConfirm_txtTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc8\xb1\x0d\xc2\x30\x10\x05\xd0\x9e\x29\xfe\x04\xcc\xc2\x00\x69\x8c\xb9\x80\xc5\xf1\x7f\x74\x3e\x2b\x8a\x22\xef\x4e\x91\xf6\x3d\xdc\x4a\x37\x54\x6d\x07\x0a\x5f\xd8\x4a\x4f\x43\x7e\x0c\xab\xdc\xb5\x37\xbe\xe1\x8d\x5f\x34\xa6\x70\x68\x04\x9e\xa1\xbd\x5b\x20\x85\x2a\xae\x2d\x7e\x97\x97\x5a\x35\x98\x0b\x17\x9e\xe7\x7d\x84\xcf\x79\xfb\x07\x00\x00\xff\xff\x07\x81\x24\x0a\x5f\x00\x00\x00")

func emailTemplatesConfirm_txtTplBytes() ([]byte, error) {
	return bindataRead(
		_emailTemplatesConfirm_txtTpl,
		"email-templates/confirm_txt.tpl",
	)
}

func emailTemplatesConfirm_txtTpl() (*asset, error) {
	bytes, err := emailTemplatesConfirm_txtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "email-templates/confirm_txt.tpl", size: 95, mode: os.FileMode(436), modTime: time.Unix(1525368504, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x4b, 0xfa, 0x79, 0x6f, 0x99, 0x6e, 0x4d, 0x20, 0xec, 0xd2, 0x4e, 0x25, 0xab, 0x6, 0x6a, 0xac, 0xb8, 0xa9, 0x97, 0xac, 0x1e, 0x1e, 0x2f, 0x93, 0x47, 0xa3, 0x52, 0x77, 0xdc, 0xf, 0x5}}
	return a, nil
}

var _emailTemplatesRecover_htmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xc1\x09\xc2\x40\x10\x05\xd0\xfb\x56\xf1\x49\x01\x2e\xb9\x8f\x53\x83\xd8\x80\xac\xc3\xc8\x88\x8b\x13\xbe\x59\x41\x42\x7a\xf7\xe0\xd5\x02\xde\x93\x98\xf5\xec\x96\x6f\x27\x3e\x39\x88\x66\x96\xe3\xb9\x4a\x8d\x59\x8b\x5c\x89\xaa\x45\x16\x3d\x75\x6f\x2f\x87\xf5\xbb\x3d\x20\x0d\x41\xbf\x1d\xa7\x6d\x3b\xf0\x87\x2f\x83\x7d\xdf\x27\x54\x0d\xa7\x4b\x6d\x8a\x35\xc1\xbf\xf3\xa2\xe5\x1b\x00\x00\xff\xff\x92\x3d\x16\x9c\x77\x00\x00\x00")

func emailTemplatesRecover_htmlTplBytes() ([]byte, error) {
	return bindataRead(
		_emailTemplatesRecover_htmlTpl,
		"email-templates/recover_html.tpl",
	)
}

func emailTemplatesRecover_htmlTpl() (*asset, error) {
	bytes, err := emailTemplatesRecover_htmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "email-templates/recover_html.tpl", size: 119, mode: os.FileMode(436), modTime: time.Unix(1525719552, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xee, 0xa, 0x65, 0x5b, 0xa, 0x83, 0x55, 0x74, 0x66, 0x54, 0x8, 0xf6, 0xac, 0xc3, 0x9e, 0x3, 0xe, 0xca, 0x6, 0xf3, 0x6f, 0x34, 0xe0, 0x5f, 0xf2, 0xcc, 0xd7, 0x22, 0x66, 0xc4, 0x57, 0x92}}
	return a, nil
}

var _emailTemplatesRecover_txtTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc8\x41\x0e\x82\x40\x0c\x05\xd0\xbd\xa7\xf8\x27\xf0\x2c\x1e\x80\xc4\x8c\xb5\x68\x63\xed\x27\x9d\x8e\x84\x10\xee\xee\x82\xed\xbb\xb9\xb6\xae\x10\x2e\x1b\x5a\x3c\xb1\xb4\x5e\x8a\x7a\x2b\x66\xba\x73\xb5\x78\xc1\x2d\x3e\xb0\x28\x62\xe3\x48\x3c\x92\x6b\xd7\x44\x11\xc2\x98\x2d\xbf\xa7\x37\x11\x8e\xa8\x29\xa6\xd8\xf7\x6b\xaa\xf0\xa7\x79\x1f\xe9\xc7\x71\xf9\x07\x00\x00\xff\xff\x7f\x48\x0e\x70\x67\x00\x00\x00")

func emailTemplatesRecover_txtTplBytes() ([]byte, error) {
	return bindataRead(
		_emailTemplatesRecover_txtTpl,
		"email-templates/recover_txt.tpl",
	)
}

func emailTemplatesRecover_txtTpl() (*asset, error) {
	bytes, err := emailTemplatesRecover_txtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "email-templates/recover_txt.tpl", size: 103, mode: os.FileMode(436), modTime: time.Unix(1525719558, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0x57, 0x52, 0x4b, 0x75, 0x56, 0x90, 0x3d, 0x38, 0x67, 0xe7, 0x6c, 0x9a, 0xa6, 0xca, 0xc, 0x16, 0xec, 0xc1, 0x8e, 0x73, 0xe4, 0x5f, 0xa4, 0xf3, 0xe6, 0x5d, 0x35, 0x85, 0x26, 0x87, 0x7}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"html-templates/layout.tpl": htmlTemplatesLayoutTpl,

	"html-templates/login.tpl": htmlTemplatesLoginTpl,

	"html-templates/recover_end.tpl": htmlTemplatesRecover_endTpl,

	"html-templates/recover_start.tpl": htmlTemplatesRecover_startTpl,

	"html-templates/recovery2fa.tpl": htmlTemplatesRecovery2faTpl,

	"html-templates/register.tpl": htmlTemplatesRegisterTpl,

	"html-templates/sms2fa_validate.tpl": htmlTemplatesSms2fa_validateTpl,

	"html-templates/sms2fa_validate_success.tpl": htmlTemplatesSms2fa_validate_successTpl,

	"html-templates/totp2fa_validate.tpl": htmlTemplatesTotp2fa_validateTpl,

	"html-templates/totp2fa_validate_success.tpl": htmlTemplatesTotp2fa_validate_successTpl,

	"email-templates/confirm_html.tpl": emailTemplatesConfirm_htmlTpl,

	"email-templates/confirm_txt.tpl": emailTemplatesConfirm_txtTpl,

	"email-templates/recover_html.tpl": emailTemplatesRecover_htmlTpl,

	"email-templates/recover_txt.tpl": emailTemplatesRecover_txtTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"email-templates": &bintree{nil, map[string]*bintree{
		"confirm_html.tpl": &bintree{emailTemplatesConfirm_htmlTpl, map[string]*bintree{}},
		"confirm_txt.tpl":  &bintree{emailTemplatesConfirm_txtTpl, map[string]*bintree{}},
		"recover_html.tpl": &bintree{emailTemplatesRecover_htmlTpl, map[string]*bintree{}},
		"recover_txt.tpl":  &bintree{emailTemplatesRecover_txtTpl, map[string]*bintree{}},
	}},
	"html-templates": &bintree{nil, map[string]*bintree{
		"layout.tpl":                   &bintree{htmlTemplatesLayoutTpl, map[string]*bintree{}},
		"login.tpl":                    &bintree{htmlTemplatesLoginTpl, map[string]*bintree{}},
		"recover_end.tpl":              &bintree{htmlTemplatesRecover_endTpl, map[string]*bintree{}},
		"recover_start.tpl":            &bintree{htmlTemplatesRecover_startTpl, map[string]*bintree{}},
		"recovery2fa.tpl":              &bintree{htmlTemplatesRecovery2faTpl, map[string]*bintree{}},
		"register.tpl":                 &bintree{htmlTemplatesRegisterTpl, map[string]*bintree{}},
		"sms2fa_validate.tpl":          &bintree{htmlTemplatesSms2fa_validateTpl, map[string]*bintree{}},
		"sms2fa_validate_success.tpl":  &bintree{htmlTemplatesSms2fa_validate_successTpl, map[string]*bintree{}},
		"totp2fa_validate.tpl":         &bintree{htmlTemplatesTotp2fa_validateTpl, map[string]*bintree{}},
		"totp2fa_validate_success.tpl": &bintree{htmlTemplatesTotp2fa_validate_successTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
